'\" t
.TH "SYSTEMD\&.NETDEV" "5" "" "systemd 233" "systemd.network"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.netdev \- Virtual Network Device configuration
.SH "SYNOPSIS"
.PP
\fInetdev\fR\&.netdev
.SH "DESCRIPTION"
.PP
Network setup is performed by
\fBsystemd-networkd\fR(8)\&.
.PP
The main Virtual Network Device file must have the extension
\&.netdev; other extensions are ignored\&. Virtual network devices are created as soon as networkd is started\&. If a netdev with the specified name already exists, networkd will use that as\-is rather than create its own\&. Note that the settings of the pre\-existing netdev will not be changed by networkd\&.
.PP
The
\&.netdev
files are read from the files located in the system network directory
/usr/lib/systemd/network, the volatile runtime network directory
/run/systemd/network
and the local administration network directory
/etc/systemd/network\&. All configuration files are collectively sorted and processed in lexical order, regardless of the directories in which they live\&. However, files with identical filenames replace each other\&. Files in
/etc
have the highest priority, files in
/run
take precedence over files with the same name in
/usr/lib\&. This can be used to override a system\-supplied configuration file with a local file if needed\&. As a special case, an empty file (file size 0) or symlink with the same name pointing to
/dev/null
disables the configuration file entirely (it is "masked")\&.
.PP
Along with the netdev file
foo\&.netdev, a "drop\-in" directory
foo\&.netdev\&.d/
may exist\&. All files with the suffix
"\&.conf"
from this directory will be parsed after the file itself is parsed\&. This is useful to alter or add configuration settings, without having to modify the main configuration file\&. Each drop\-in file must have appropriate section headers\&.
.PP
In addition to
/etc/systemd/network, drop\-in
"\&.d"
directories can be placed in
/usr/lib/systemd/network
or
/run/systemd/network
directories\&. Drop\-in files in
/etc
take precedence over those in
/run
which in turn take precedence over those in
/usr/lib\&. Drop\-in files under any of these directories take precedence over the main netdev file wherever located\&. (Of course, since
/run
is temporary and
/usr/lib
is for vendors, it is unlikely drop\-ins should be used in either of those places\&.)
.SH "SUPPORTED NETDEV KINDS"
.PP
The following kinds of virtual network devices may be configured in
\&.netdev
files:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&Supported kinds of virtual network devices
.TS
allbox tab(:);
lB lB.
T{
Kind
T}:T{
Description
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fIbond\fR
T}:T{
A bond device is an aggregation of all its slave devices\&. See \m[blue]\fBLinux Ethernet Bonding Driver HOWTO\fR\m[]\&\s-2\u[1]\d\s+2 for details\&.Local configuration
T}
T{
\fIbridge\fR
T}:T{
A bridge device is a software switch, and each of its slave devices and the bridge itself are ports of the switch\&.
T}
T{
\fIdummy\fR
T}:T{
A dummy device drops all packets sent to it\&.
T}
T{
\fIgre\fR
T}:T{
A Level 3 GRE tunnel over IPv4\&. See \m[blue]\fBRFC 2784\fR\m[]\&\s-2\u[2]\d\s+2 for details\&.
T}
T{
\fIgretap\fR
T}:T{
A Level 2 GRE tunnel over IPv4\&.
T}
T{
\fIip6gre\fR
T}:T{
A Level 3 GRE tunnel over IPv6\&.
T}
T{
\fIip6tnl\fR
T}:T{
An IPv4 or IPv6 tunnel over IPv6
T}
T{
\fIip6gretap\fR
T}:T{
A Level 2 GRE tunnel over IPv6\&.
T}
T{
\fIipip\fR
T}:T{
An IPv4 over IPv4 tunnel\&.
T}
T{
\fIipvlan\fR
T}:T{
An ipvlan device is a stacked device which receives packets from its underlying device based on IP address filtering\&.
T}
T{
\fImacvlan\fR
T}:T{
A macvlan device is a stacked device which receives packets from its underlying device based on MAC address filtering\&.
T}
T{
\fImacvtap\fR
T}:T{
A macvtap device is a stacked device which receives packets from its underlying device based on MAC address filtering\&.
T}
T{
\fIsit\fR
T}:T{
An IPv6 over IPv4 tunnel\&.
T}
T{
\fItap\fR
T}:T{
A persistent Level 2 tunnel between a network device and a device node\&.
T}
T{
\fItun\fR
T}:T{
A persistent Level 3 tunnel between a network device and a device node\&.
T}
T{
\fIveth\fR
T}:T{
An Ethernet tunnel between a pair of network devices\&.
T}
T{
\fIvlan\fR
T}:T{
A VLAN is a stacked device which receives packets from its underlying device based on VLAN tagging\&. See \m[blue]\fBIEEE 802\&.1Q\fR\m[]\&\s-2\u[3]\d\s+2 for details\&.
T}
T{
\fIvti\fR
T}:T{
An IPv4 over IPSec tunnel\&.
T}
T{
\fIvti6\fR
T}:T{
An IPv6 over IPSec tunnel\&.
T}
T{
\fIvxlan\fR
T}:T{
A virtual extensible LAN (vxlan), for connecting Cloud computing deployments\&.
T}
T{
\fIvrf\fR
T}:T{
A Virtual Routing and Forwarding (\m[blue]\fBVRF\fR\m[]\&\s-2\u[4]\d\s+2) interface to create separate routing and forwarding domains\&.
T}
T{
\fIvcan\fR
T}:T{
The virtual CAN driver (vcan)\&. Similar to the network loopback devices, vcan offers a virtual local CAN interface\&.
T}
.TE
.sp 1
.SH "[MATCH] SECTION OPTIONS"
.PP
A virtual network device is only created if the
"[Match]"
section matches the current environment, or if the section is empty\&. The following keys are accepted:
.PP
\fIHost=\fR
.RS 4
Matches against the hostname or machine ID of the host\&. See
"ConditionHost="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIVirtualization=\fR
.RS 4
Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation\&. See
"ConditionVirtualization="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIKernelCommandLine=\fR
.RS 4
Checks whether a specific kernel command line option is set (or if prefixed with the exclamation mark unset)\&. See
"ConditionKernelCommandLine="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIArchitecture=\fR
.RS 4
Checks whether the system is running on a specific architecture\&. See
"ConditionArchitecture="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.SH "[NETDEV] SECTION OPTIONS"
.PP
The
"[NetDev]"
section accepts the following keys:
.PP
\fIDescription=\fR
.RS 4
A free\-form description of the netdev\&.
.RE
.PP
\fIName=\fR
.RS 4
The interface name used when creating the netdev\&. This option is compulsory\&.
.RE
.PP
\fIKind=\fR
.RS 4
The netdev kind\&. This option is compulsory\&. See the
"Supported netdev kinds"
section for the valid keys\&.
.RE
.PP
\fIMTUBytes=\fR
.RS 4
The maximum transmission unit in bytes to set for the device\&. The usual suffixes K, M, G, are supported and are understood to the base of 1024\&. This key is not currently supported for
"tun"
or
"tap"
devices\&.
.RE
.PP
\fIMACAddress=\fR
.RS 4
The MAC address to use for the device\&. If none is given, one is generated based on the interface name and the
\fBmachine-id\fR(5)\&. This key is not currently supported for
"tun"
or
"tap"
devices\&.
.RE
.SH "[BRIDGE] SECTION OPTIONS"
.PP
The
"[Bridge]"
section only applies for netdevs of kind
"bridge", and accepts the following keys:
.PP
\fIHelloTimeSec=\fR
.RS 4
HelloTimeSec specifies the number of seconds between two hello packets sent out by the root bridge and the designated bridges\&. Hello packets are used to communicate information about the topology throughout the entire bridged local area network\&.
.RE
.PP
\fIMaxAgeSec=\fR
.RS 4
MaxAgeSec specifies the number of seconds of maximum message age\&. If the last seen (received) hello packet is more than this number of seconds old, the bridge in question will start the takeover procedure in attempt to become the Root Bridge itself\&.
.RE
.PP
\fIForwardDelaySec=\fR
.RS 4
ForwardDelaySec specifies the number of seconds spent in each of the Listening and Learning states before the Forwarding state is entered\&.
.RE
.PP
\fIAgeingTimeSec=\fR
.RS 4
This specifies the number of seconds a MAC Address will be kept in the forwarding database after having a packet received from this MAC Address\&.
.RE
.PP
\fIPriority=\fR
.RS 4
The priority of the bridge\&. An integer between 0 and 65535\&. A lower value means higher priority\&. The bridge having the lowest priority will be elected as root bridge\&.
.RE
.PP
\fIDefaultPVID=\fR
.RS 4
This specifies the default port VLAN ID of a newly attached bridge port\&.
.RE
.PP
\fIMulticastQuerier=\fR
.RS 4
A boolean\&. This setting controls the IFLA_BR_MCAST_QUERIER option in the kernel\&. If enabled, the kernel will send general ICMP queries from a zero source address\&. This feature should allow faster convergence on startup, but it causes some multicast\-aware switches to misbehave and disrupt forwarding of multicast packets\&. When unset, the kernel\*(Aqs default setting applies\&.
.RE
.PP
\fIMulticastSnooping=\fR
.RS 4
A boolean\&. This setting controls the IFLA_BR_MCAST_SNOOPING option in the kernel\&. If enabled, IGMP snooping monitors the Internet Group Management Protocol (IGMP) traffic between hosts and multicast routers\&. When unset, the kernel\*(Aqs default setting applies\&.
.RE
.PP
\fIVLANFiltering=\fR
.RS 4
A boolean\&. This setting controls the IFLA_BR_VLAN_FILTERING option in the kernel\&. If enabled, the bridge will be started in VLAN\-filtering mode\&. When unset, the kernel\*(Aqs default setting applies\&.
.RE
.PP
\fISTP=\fR
.RS 4
A boolean\&. This enables the bridge\*(Aqs Spanning Tree Protocol (STP)\&. When unset, the kernel\*(Aqs default setting applies\&.
.RE
.SH "[VLAN] SECTION OPTIONS"
.PP
The
"[VLAN]"
section only applies for netdevs of kind
"vlan", and accepts the following key:
.PP
\fIId=\fR
.RS 4
The VLAN ID to use\&. An integer in the range 0\(en4094\&. This option is compulsory\&.
.RE
.SH "[MACVLAN] SECTION OPTIONS"
.PP
The
"[MACVLAN]"
section only applies for netdevs of kind
"macvlan", and accepts the following key:
.PP
\fIMode=\fR
.RS 4
The MACVLAN mode to use\&. The supported options are
"private",
"vepa",
"bridge", and
"passthru"\&.
.RE
.SH "[MACVTAP] SECTION OPTIONS"
.PP
The
"[MACVTAP]"
section applies for netdevs of kind
"macvtap"
and accepts the same key as
"[MACVLAN]"\&.
.SH "[IPVLAN] SECTION OPTIONS"
.PP
The
"[IPVLAN]"
section only applies for netdevs of kind
"ipvlan", and accepts the following key:
.PP
\fIMode=\fR
.RS 4
The IPVLAN mode to use\&. The supported options are
"L2"
and
"L3"\&.
.RE
.SH "[VXLAN] SECTION OPTIONS"
.PP
The
"[VXLAN]"
section only applies for netdevs of kind
"vxlan", and accepts the following keys:
.PP
\fIId=\fR
.RS 4
The VXLAN ID to use\&.
.RE
.PP
\fIRemote=\fR
.RS 4
Configures destination multicast group IP address\&.
.RE
.PP
\fILocal=\fR
.RS 4
Configures local IP address\&.
.RE
.PP
\fITOS=\fR
.RS 4
The Type Of Service byte value for a vxlan interface\&.
.RE
.PP
\fITTL=\fR
.RS 4
A fixed Time To Live N on Virtual eXtensible Local Area Network packets\&. N is a number in the range 1\(en255\&. 0 is a special value meaning that packets inherit the TTL value\&.
.RE
.PP
\fIMacLearning=\fR
.RS 4
A boolean\&. When true, enables dynamic MAC learning to discover remote MAC addresses\&.
.RE
.PP
\fIFDBAgeingSec=\fR
.RS 4
The lifetime of Forwarding Database entry learnt by the kernel, in seconds\&.
.RE
.PP
\fIMaximumFDBEntries=\fR
.RS 4
Configures maximum number of FDB entries\&.
.RE
.PP
\fIReduceARPProxy=\fR
.RS 4
A boolean\&. When true, bridge\-connected VXLAN tunnel endpoint answers ARP requests from the local bridge on behalf of remote Distributed Overlay Virtual Ethernet
\m[blue]\fB(DVOE)\fR\m[]\&\s-2\u[5]\d\s+2
clients\&. Defaults to false\&.
.RE
.PP
\fIL2MissNotification=\fR
.RS 4
A boolean\&. When true, enables netlink LLADDR miss notifications\&.
.RE
.PP
\fIL3MissNotification=\fR
.RS 4
A boolean\&. When true, enables netlink IP address miss notifications\&.
.RE
.PP
\fIRouteShortCircuit=\fR
.RS 4
A boolean\&. When true, route short circuiting is turned on\&.
.RE
.PP
\fIUDPChecksum=\fR
.RS 4
A boolean\&. When true, transmitting UDP checksums when doing VXLAN/IPv4 is turned on\&.
.RE
.PP
\fIUDP6ZeroChecksumTx=\fR
.RS 4
A boolean\&. When true, sending zero checksums in VXLAN/IPv6 is turned on\&.
.RE
.PP
\fIUDP6ZeroChecksumRx=\fR
.RS 4
A boolean\&. When true, receiving zero checksums in VXLAN/IPv6 is turned on\&.
.RE
.PP
\fIRemoteChecksumTx=\fR
.RS 4
A boolean\&. When true, remote transmit checksum offload of VXLAN is turned on\&.
.RE
.PP
\fIRemoteChecksumRx=\fR
.RS 4
A boolean\&. When true, remote receive checksum offload in VXLAN is turned on\&.
.RE
.PP
\fIGroupPolicyExtension=\fR
.RS 4
A boolean\&. When true, it enables Group Policy VXLAN extension security label mechanism across network peers based on VXLAN\&. For details about the Group Policy VXLAN, see the
\m[blue]\fBVXLAN Group Policy\fR\m[]\&\s-2\u[6]\d\s+2
document\&. Defaults to false\&.
.RE
.PP
\fIDestinationPort=\fR
.RS 4
Configures the default destination UDP port on a per\-device basis\&. If destination port is not specified then Linux kernel default will be used\&. Set destination port 4789 to get the IANA assigned value, and destination port 0 to get default values\&.
.RE
.PP
\fIPortRange=\fR
.RS 4
Configures VXLAN port range\&. VXLAN bases source UDP port based on flow to help the receiver to be able to load balance based on outer header flow\&. It restricts the port range to the normal UDP local ports, and allows overriding via configuration\&.
.RE
.SH "[TUNNEL] SECTION OPTIONS"
.PP
The
"[Tunnel]"
section only applies for netdevs of kind
"ipip",
"sit",
"gre",
"gretap",
"ip6gre",
"ip6gretap",
"vti",
"vti6", and
"ip6tnl"
and accepts the following keys:
.PP
\fILocal=\fR
.RS 4
A static local address for tunneled packets\&. It must be an address on another interface of this host\&.
.RE
.PP
\fIRemote=\fR
.RS 4
The remote endpoint of the tunnel\&.
.RE
.PP
\fITOS=\fR
.RS 4
The Type Of Service byte value for a tunnel interface\&. For details about the TOS, see the
\m[blue]\fBType of Service in the Internet Protocol Suite\fR\m[]\&\s-2\u[7]\d\s+2
document\&.
.RE
.PP
\fITTL=\fR
.RS 4
A fixed Time To Live N on tunneled packets\&. N is a number in the range 1\(en255\&. 0 is a special value meaning that packets inherit the TTL value\&. The default value for IPv4 tunnels is: inherit\&. The default value for IPv6 tunnels is 64\&.
.RE
.PP
\fIDiscoverPathMTU=\fR
.RS 4
A boolean\&. When true, enables Path MTU Discovery on the tunnel\&.
.RE
.PP
\fIIPv6FlowLabel=\fR
.RS 4
Configures the 20\-bit flow label (see
\m[blue]\fBRFC 6437\fR\m[]\&\s-2\u[8]\d\s+2) field in the IPv6 header (see
\m[blue]\fBRFC 2460\fR\m[]\&\s-2\u[9]\d\s+2), which is used by a node to label packets of a flow\&. It is only used for IPv6 tunnels\&. A flow label of zero is used to indicate packets that have not been labeled\&. It can be configured to a value in the range 0\(en0xFFFFF, or be set to
"inherit", in which case the original flowlabel is used\&.
.RE
.PP
\fICopyDSCP=\fR
.RS 4
A boolean\&. When true, the Differentiated Service Code Point (DSCP) field will be copied to the inner header from outer header during the decapsulation of an IPv6 tunnel packet\&. DSCP is a field in an IP packet that enables different levels of service to be assigned to network traffic\&. Defaults to
"no"\&.
.RE
.PP
\fIEncapsulationLimit=\fR
.RS 4
The Tunnel Encapsulation Limit option specifies how many additional levels of encapsulation are permitted to be prepended to the packet\&. For example, a Tunnel Encapsulation Limit option containing a limit value of zero means that a packet carrying that option may not enter another tunnel before exiting the current tunnel\&. (see
\m[blue]\fBRFC 2473\fR\m[]\&\s-2\u[10]\d\s+2)\&. The valid range is 0\(en255 and
"none"\&. Defaults to 4\&.
.RE
.PP
\fIKey=\fR
.RS 4
The
\fIKey=\fR
parameter specifies the same key to use in both directions (\fIInputKey=\fR
and
\fIOutputKey=\fR)\&. The
\fIKey=\fR
is either a number or an IPv4 address\-like dotted quad\&. It is used as mark\-configured SAD/SPD entry as part of the lookup key (both in data and control path) in ip xfrm (framework used to implement IPsec protocol)\&. See
\m[blue]\fBip\-xfrm \(em transform configuration\fR\m[]\&\s-2\u[11]\d\s+2
for details\&. It is only used for VTI/VTI6 tunnels\&.
.RE
.PP
\fIInputKey=\fR
.RS 4
The
\fIInputKey=\fR
parameter specifies the key to use for input\&. The format is same as
\fIKey=\fR\&. It is only used for VTI/VTI6 tunnels\&.
.RE
.PP
\fIOutputKey=\fR
.RS 4
The
\fIOutputKey=\fR
parameter specifies the key to use for output\&. The format is same as
\fIKey=\fR\&. It is only used for VTI/VTI6 tunnels\&.
.RE
.PP
\fIMode=\fR
.RS 4
An
"ip6tnl"
tunnel can be in one of three modes
"ip6ip6"
for IPv6 over IPv6,
"ipip6"
for IPv4 over IPv6 or
"any"
for either\&.
.RE
.SH "[PEER] SECTION OPTIONS"
.PP
The
"[Peer]"
section only applies for netdevs of kind
"veth"
and accepts the following keys:
.PP
\fIName=\fR
.RS 4
The interface name used when creating the netdev\&. This option is compulsory\&.
.RE
.PP
\fIMACAddress=\fR
.RS 4
The peer MACAddress, if not set, it is generated in the same way as the MAC address of the main interface\&.
.RE
.SH "[TUN] SECTION OPTIONS"
.PP
The
"[Tun]"
section only applies for netdevs of kind
"tun", and accepts the following keys:
.PP
\fIOneQueue=\fR
.RS 4
Takes a boolean argument\&. Configures whether all packets are queued at the device (enabled), or a fixed number of packets are queued at the device and the rest at the
"qdisc"\&. Defaults to
"no"\&.
.RE
.PP
\fIMultiQueue=\fR
.RS 4
Takes a boolean argument\&. Configures whether to use multiple file descriptors (queues) to parallelize packets sending and receiving\&. Defaults to
"no"\&.
.RE
.PP
\fIPacketInfo=\fR
.RS 4
Takes a boolean argument\&. Configures whether packets should be prepended with four extra bytes (two flag bytes and two protocol bytes)\&. If disabled, it indicates that the packets will be pure IP packets\&. Defaults to
"no"\&.
.RE
.PP
\fIVNetHeader=\fR
.RS 4
Takes a boolean argument\&. Configures IFF_VNET_HDR flag for a tap device\&. It allows sending and receiving larger Generic Segmentation Offload (GSO) packets\&. This may increase throughput significantly\&. Defaults to
"no"\&.
.RE
.PP
\fIUser=\fR
.RS 4
User to grant access to the
/dev/net/tun
device\&.
.RE
.PP
\fIGroup=\fR
.RS 4
Group to grant access to the
/dev/net/tun
device\&.
.RE
.SH "[TAP] SECTION OPTIONS"
.PP
The
"[Tap]"
section only applies for netdevs of kind
"tap", and accepts the same keys as the
"[Tun]"
section\&.
.SH "[BOND] SECTION OPTIONS"
.PP
The
"[Bond]"
section accepts the following key:
.PP
\fIMode=\fR
.RS 4
Specifies one of the bonding policies\&. The default is
"balance\-rr"
(round robin)\&. Possible values are
"balance\-rr",
"active\-backup",
"balance\-xor",
"broadcast",
"802\&.3ad",
"balance\-tlb", and
"balance\-alb"\&.
.RE
.PP
\fITransmitHashPolicy=\fR
.RS 4
Selects the transmit hash policy to use for slave selection in balance\-xor, 802\&.3ad, and tlb modes\&. Possible values are
"layer2",
"layer3+4",
"layer2+3",
"encap2+3", and
"encap3+4"\&.
.RE
.PP
\fILACPTransmitRate=\fR
.RS 4
Specifies the rate with which link partner transmits Link Aggregation Control Protocol Data Unit packets in 802\&.3ad mode\&. Possible values are
"slow", which requests partner to transmit LACPDUs every 30 seconds, and
"fast", which requests partner to transmit LACPDUs every second\&. The default value is
"slow"\&.
.RE
.PP
\fIMIIMonitorSec=\fR
.RS 4
Specifies the frequency that Media Independent Interface link monitoring will occur\&. A value of zero disables MII link monitoring\&. This value is rounded down to the nearest millisecond\&. The default value is 0\&.
.RE
.PP
\fIUpDelaySec=\fR
.RS 4
Specifies the delay before a link is enabled after a link up status has been detected\&. This value is rounded down to a multiple of MIIMonitorSec\&. The default value is 0\&.
.RE
.PP
\fIDownDelaySec=\fR
.RS 4
Specifies the delay before a link is disabled after a link down status has been detected\&. This value is rounded down to a multiple of MIIMonitorSec\&. The default value is 0\&.
.RE
.PP
\fILearnPacketIntervalSec=\fR
.RS 4
Specifies the number of seconds between instances where the bonding driver sends learning packets to each slave peer switch\&. The valid range is 1\(en0x7fffffff; the default value is 1\&. This option has an effect only for the balance\-tlb and balance\-alb modes\&.
.RE
.PP
\fIAdSelect=\fR
.RS 4
Specifies the 802\&.3ad aggregation selection logic to use\&. Possible values are
"stable",
"bandwidth"
and
"count"\&.
.RE
.PP
\fIFailOverMACPolicy=\fR
.RS 4
Specifies whether the active\-backup mode should set all slaves to the same MAC address at the time of enslavement or, when enabled, to perform special handling of the bond\*(Aqs MAC address in accordance with the selected policy\&. The default policy is none\&. Possible values are
"none",
"active"
and
"follow"\&.
.RE
.PP
\fIARPValidate=\fR
.RS 4
Specifies whether or not ARP probes and replies should be validated in any mode that supports ARP monitoring, or whether non\-ARP traffic should be filtered (disregarded) for link monitoring purposes\&. Possible values are
"none",
"active",
"backup"
and
"all"\&.
.RE
.PP
\fIARPIntervalSec=\fR
.RS 4
Specifies the ARP link monitoring frequency in milliseconds\&. A value of 0 disables ARP monitoring\&. The default value is 0\&.
.RE
.PP
\fIARPIPTargets=\fR
.RS 4
Specifies the IP addresses to use as ARP monitoring peers when ARPIntervalSec is greater than 0\&. These are the targets of the ARP request sent to determine the health of the link to the targets\&. Specify these values in IPv4 dotted decimal format\&. At least one IP address must be given for ARP monitoring to function\&. The maximum number of targets that can be specified is 16\&. The default value is no IP addresses\&.
.RE
.PP
\fIARPAllTargets=\fR
.RS 4
Specifies the quantity of ARPIPTargets that must be reachable in order for the ARP monitor to consider a slave as being up\&. This option affects only active\-backup mode for slaves with ARPValidate enabled\&. Possible values are
"any"
and
"all"\&.
.RE
.PP
\fIPrimaryReselectPolicy=\fR
.RS 4
Specifies the reselection policy for the primary slave\&. This affects how the primary slave is chosen to become the active slave when failure of the active slave or recovery of the primary slave occurs\&. This option is designed to prevent flip\-flopping between the primary slave and other slaves\&. Possible values are
"always",
"better"
and
"failure"\&.
.RE
.PP
\fIResendIGMP=\fR
.RS 4
Specifies the number of IGMP membership reports to be issued after a failover event\&. One membership report is issued immediately after the failover, subsequent packets are sent in each 200ms interval\&. The valid range is 0\(en255\&. Defaults to 1\&. A value of 0 prevents the IGMP membership report from being issued in response to the failover event\&.
.RE
.PP
\fIPacketsPerSlave=\fR
.RS 4
Specify the number of packets to transmit through a slave before moving to the next one\&. When set to 0, then a slave is chosen at random\&. The valid range is 0\(en65535\&. Defaults to 1\&. This option only has effect when in balance\-rr mode\&.
.RE
.PP
\fIGratuitousARP=\fR
.RS 4
Specify the number of peer notifications (gratuitous ARPs and unsolicited IPv6 Neighbor Advertisements) to be issued after a failover event\&. As soon as the link is up on the new slave, a peer notification is sent on the bonding device and each VLAN sub\-device\&. This is repeated at each link monitor interval (ARPIntervalSec or MIIMonitorSec, whichever is active) if the number is greater than 1\&. The valid range is 0\(en255\&. The default value is 1\&. These options affect only the active\-backup mode\&.
.RE
.PP
\fIAllSlavesActive=\fR
.RS 4
A boolean\&. Specifies that duplicate frames (received on inactive ports) should be dropped when false, or delivered when true\&. Normally, bonding will drop duplicate frames (received on inactive ports), which is desirable for most users\&. But there are some times it is nice to allow duplicate frames to be delivered\&. The default value is false (drop duplicate frames received on inactive ports)\&.
.RE
.PP
\fIMinLinks=\fR
.RS 4
Specifies the minimum number of links that must be active before asserting carrier\&. The default value is 0\&.
.RE
.PP
\fIActiveSlave=\fR
.RS 4
A boolean\&. Specifies the new active slave\&. The
"ActiveSlave="
option is only valid for following modes:
"active\-backup",
"balance\-alb"
and
"balance\-tlb"\&. Defaults to false\&.
.RE
.PP
\fIPrimarySlave=\fR
.RS 4
A boolean\&. Specifies which slave is the primary device\&. The specified device will always be the active slave while it is available\&. Only when the primary is off\-line will alternate devices be used\&. This is useful when one slave is preferred over another, e\&.g\&. when one slave has higher throughput than another\&. The
"PrimarySlave="
option is only valid for following modes:
"active\-backup",
"balance\-alb"
and
"balance\-tlb"\&. Defaults to false\&.
.RE
.PP
For more detail information see
\m[blue]\fBLinux Ethernet Bonding Driver HOWTO\fR\m[]\&\s-2\u[1]\d\s+2
.SH "EXAMPLE"
.PP
\fBExample\ \&1.\ \&/etc/systemd/network/25\-bridge\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=bridge0
Kind=bridge
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&/etc/systemd/network/25\-vlan1\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[Match]
Virtualization=no

[NetDev]
Name=vlan1
Kind=vlan

[VLAN]
Id=1
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&3.\ \&/etc/systemd/network/25\-ipip\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=ipip\-tun
Kind=ipip
MTUBytes=1480

[Tunnel]
Local=192\&.168\&.223\&.238
Remote=192\&.169\&.224\&.239
TTL=64
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&4.\ \&/etc/systemd/network/25\-tap\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=tap\-test
Kind=tap

[Tap]
MultiQueue=true
PacketInfo=true
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&5.\ \&/etc/systemd/network/25\-sit\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=sit\-tun
Kind=sit
MTUBytes=1480

[Tunnel]
Local=10\&.65\&.223\&.238
Remote=10\&.65\&.223\&.239
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&6.\ \&/etc/systemd/network/25\-gre\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=gre\-tun
Kind=gre
MTUBytes=1480

[Tunnel]
Local=10\&.65\&.223\&.238
Remote=10\&.65\&.223\&.239
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&7.\ \&/etc/systemd/network/25\-vti\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=vti\-tun
Kind=vti
MTUBytes=1480

[Tunnel]
Local=10\&.65\&.223\&.238
Remote=10\&.65\&.223\&.239
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&8.\ \&/etc/systemd/network/25\-veth\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=veth\-test
Kind=veth

[Peer]
Name=veth\-peer
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&9.\ \&/etc/systemd/network/25\-bond\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=bond1
Kind=bond

[Bond]
Mode=802\&.3ad
TransmitHashPolicy=layer3+4
MIIMonitorSec=1s
LACPTransmitRate=fast
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&10.\ \&/etc/systemd/network/25\-dummy\&.netdev\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=dummy\-test
Kind=dummy
MACAddress=12:34:56:78:9a:bc
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&11.\ \&/etc/systemd/network/25\-vrf\&.netdev\fR
.PP
Create a VRF interface with table 42\&.
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=vrf\-test
Kind=vrf

[VRF]
TableId=42
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&12.\ \&/etc/systemd/network/25\-macvtap\&.netdev\fR
.PP
Create a MacVTap device\&.
.sp
.if n \{\
.RS 4
.\}
.nf
[NetDev]
Name=macvtap\-test
Kind=macvtap
      
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-networkd\fR(8),
\fBsystemd.link\fR(5),
\fBsystemd.network\fR(5)
.SH "NOTES"
.IP " 1." 4
Linux Ethernet Bonding Driver HOWTO
.RS 4
\%https://www.kernel.org/doc/Documentation/networking/bonding.txt
.RE
.IP " 2." 4
RFC 2784
.RS 4
\%https://tools.ietf.org/html/rfc2784
.RE
.IP " 3." 4
IEEE 802.1Q
.RS 4
\%http://www.ieee802.org/1/pages/802.1Q.html
.RE
.IP " 4." 4
VRF
.RS 4
\%https://www.kernel.org/doc/Documentation/networking/vrf.txt
.RE
.IP " 5." 4
(DVOE)
.RS 4
\%https://en.wikipedia.org/wiki/Distributed_Overlay_Virtual_Ethernet
.RE
.IP " 6." 4
VXLAN Group Policy
.RS 4
\%https://tools.ietf.org/html/draft-smith-vxlan-group-policy
.RE
.IP " 7." 4
Type of Service in the Internet Protocol Suite
.RS 4
\%http://tools.ietf.org/html/rfc1349
.RE
.IP " 8." 4
RFC 6437
.RS 4
\%https://tools.ietf.org/html/rfc6437
.RE
.IP " 9." 4
RFC 2460
.RS 4
\%https://tools.ietf.org/html/rfc2460
.RE
.IP "10." 4
RFC 2473
.RS 4
\%https://tools.ietf.org/html/rfc2473#section-4.1.1
.RE
.IP "11." 4
ip-xfrm \(em transform configuration
.RS 4
\%http://man7.org/linux/man-pages/man8/ip-xfrm.8.html
.RE
