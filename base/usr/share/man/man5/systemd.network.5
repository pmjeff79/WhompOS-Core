'\" t
.TH "SYSTEMD\&.NETWORK" "5" "" "systemd 233" "systemd.network"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.network \- Network configuration
.SH "SYNOPSIS"
.PP
\fInetwork\fR\&.network
.SH "DESCRIPTION"
.PP
Network setup is performed by
\fBsystemd-networkd\fR(8)\&.
.PP
The main network file must have the extension
\&.network; other extensions are ignored\&. Networks are applied to links whenever the links appear\&.
.PP
The
\&.network
files are read from the files located in the system network directory
/usr/lib/systemd/network, the volatile runtime network directory
/run/systemd/network
and the local administration network directory
/etc/systemd/network\&. All configuration files are collectively sorted and processed in lexical order, regardless of the directories in which they live\&. However, files with identical filenames replace each other\&. Files in
/etc
have the highest priority, files in
/run
take precedence over files with the same name in
/usr/lib\&. This can be used to override a system\-supplied configuration file with a local file if needed\&. As a special case, an empty file (file size 0) or symlink with the same name pointing to
/dev/null
disables the configuration file entirely (it is "masked")\&.
.PP
Along with the network file
foo\&.network, a "drop\-in" directory
foo\&.network\&.d/
may exist\&. All files with the suffix
"\&.conf"
from this directory will be parsed after the file itself is parsed\&. This is useful to alter or add configuration settings, without having to modify the main configuration file\&. Each drop\-in file must have appropriate section headers\&.
.PP
In addition to
/etc/systemd/network, drop\-in
"\&.d"
directories can be placed in
/usr/lib/systemd/network
or
/run/systemd/network
directories\&. Drop\-in files in
/etc
take precedence over those in
/run
which in turn take precedence over those in
/usr/lib\&. Drop\-in files under any of these directories take precedence over the main netdev file wherever located\&. (Of course, since
/run
is temporary and
/usr/lib
is for vendors, it is unlikely drop\-ins should be used in either of those places\&.)
.PP
Note that an interface without any static IPv6 addresses configured, and neither DHCPv6 nor IPv6LL enabled, shall be considered to have no IPv6 support\&. IPv6 will be automatically disabled for that interface by writing "1" to
/proc/sys/net/ipv6/conf/\fIifname\fR/disable_ipv6\&.
.SH "[MATCH] SECTION OPTIONS"
.PP
The network file contains a
"[Match]"
section, which determines if a given network file may be applied to a given device; and a
"[Network]"
section specifying how the device should be configured\&. The first (in lexical order) of the network files that matches a given device is applied, all later files are ignored, even if they match as well\&.
.PP
A network file is said to match a device if each of the entries in the
"[Match]"
section matches, or if the section is empty\&. The following keys are accepted:
.PP
\fIMACAddress=\fR
.RS 4
The hardware address of the interface (use full colon\-delimited hexadecimal, e\&.g\&., 01:23:45:67:89:ab)\&.
.RE
.PP
\fIPath=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the persistent path, as exposed by the udev property
"ID_PATH"\&. If the list is prefixed with a "!", the test is inverted; i\&.e\&. it is true when
"ID_PATH"
does not match any item in the list\&.
.RE
.PP
\fIDriver=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the driver currently bound to the device, as exposed by the udev property
"DRIVER"
of its parent device, or if that is not set the driver as exposed by
"ethtool \-i"
of the device itself\&. If the list is prefixed with a "!", the test is inverted\&.
.RE
.PP
\fIType=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the device type, as exposed by the udev property
"DEVTYPE"\&. If the list is prefixed with a "!", the test is inverted\&.
.RE
.PP
\fIName=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the device name, as exposed by the udev property
"INTERFACE"\&. If the list is prefixed with a "!", the test is inverted\&.
.RE
.PP
\fIHost=\fR
.RS 4
Matches against the hostname or machine ID of the host\&. See
"ConditionHost="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIVirtualization=\fR
.RS 4
Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation\&. See
"ConditionVirtualization="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIKernelCommandLine=\fR
.RS 4
Checks whether a specific kernel command line option is set (or if prefixed with the exclamation mark unset)\&. See
"ConditionKernelCommandLine="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fIArchitecture=\fR
.RS 4
Checks whether the system is running on a specific architecture\&. See
"ConditionArchitecture="
in
\fBsystemd.unit\fR(5)
for details\&.
.RE
.SH "[LINK] SECTION OPTIONS"
.PP
The
"[Link]"
section accepts the following keys:
.PP
\fIMACAddress=\fR
.RS 4
The hardware address to set for the device\&.
.RE
.PP
\fIMTUBytes=\fR
.RS 4
The maximum transmission unit in bytes to set for the device\&. The usual suffixes K, M, G, are supported and are understood to the base of 1024\&.
.sp
Note that if IPv6 is enabled on the interface, and the MTU is chosen below 1280 (the minimum MTU for IPv6) it will automatically be increased to this value\&.
.RE
.PP
\fIARP=\fR
.RS 4
A boolean\&. Enables or disables the ARP (low\-level Address Resolution Protocol) for this interface\&. Defaults to unset, which means that the kernel default will be used\&.
.sp
For example, disabling ARP is useful when creating multiple MACVLAN or VLAN virtual interfaces atop a single lower\-level physical interface, which will then only serve as a link/"bridge" device aggregating traffic to the same physical link and not participate in the network otherwise\&.
.RE
.PP
\fIUnmanaged=\fR
.RS 4
A boolean\&. When
"yes", no attempts are made to bring up or configure matching links, equivalent to when there are no matching network files\&. Defaults to
"no"\&.
.sp
This is useful for preventing later matching network files from interfering with certain interfaces that are fully controlled by other applications\&.
.RE
.SH "[NETWORK] SECTION OPTIONS"
.PP
The
"[Network]"
section accepts the following keys:
.PP
\fIDescription=\fR
.RS 4
A description of the device\&. This is only used for presentation purposes\&.
.RE
.PP
\fIDHCP=\fR
.RS 4
Enables DHCPv4 and/or DHCPv6 client support\&. Accepts
"yes",
"no",
"ipv4", or
"ipv6"\&.
.sp
Note that DHCPv6 will by default be triggered by Router Advertisement, if that is enabled, regardless of this parameter\&. By enabling DHCPv6 support explicitly, the DHCPv6 client will be started regardless of the presence of routers on the link, or what flags the routers pass\&. See
"IPv6AcceptRA="\&.
.sp
Furthermore, note that by default the domain name specified through DHCP is not used for name resolution\&. See option
\fBUseDomains=\fR
below\&.
.sp
See the
"[DHCP]"
section below for further configuration options for the DHCP client support\&.
.RE
.PP
\fIDHCPServer=\fR
.RS 4
A boolean\&. Enables DHCPv4 server support\&. Defaults to
"no"\&. Further settings for the DHCP server may be set in the
"[DHCPServer]"
section described below\&.
.RE
.PP
\fILinkLocalAddressing=\fR
.RS 4
Enables link\-local address autoconfiguration\&. Accepts
"yes",
"no",
"ipv4", or
"ipv6"\&. Defaults to
"ipv6"\&.
.RE
.PP
\fIIPv4LLRoute=\fR
.RS 4
A boolean\&. When true, sets up the route needed for non\-IPv4LL hosts to communicate with IPv4LL\-only hosts\&. Defaults to false\&.
.RE
.PP
\fIIPv6Token=\fR
.RS 4
An IPv6 address with the top 64 bits unset\&. When set, indicates the 64\-bit interface part of SLAAC IPv6 addresses for this link\&. Note that the token is only ever used for SLAAC, and not for DHCPv6 addresses, even in the case DHCP is requested by router advertisement\&. By default, the token is autogenerated\&.
.RE
.PP
\fILLMNR=\fR
.RS 4
A boolean or
"resolve"\&. When true, enables
\m[blue]\fBLink\-Local Multicast Name Resolution\fR\m[]\&\s-2\u[1]\d\s+2
on the link\&. When set to
"resolve", only resolution is enabled, but not host registration and announcement\&. Defaults to true\&. This setting is read by
\fBsystemd-resolved.service\fR(8)\&.
.RE
.PP
\fIMulticastDNS=\fR
.RS 4
A boolean or
"resolve"\&. When true, enables
\m[blue]\fBMulticast DNS\fR\m[]\&\s-2\u[2]\d\s+2
support on the link\&. When set to
"resolve", only resolution is enabled, but not host or service registration and announcement\&. Defaults to false\&. This setting is read by
\fBsystemd-resolved.service\fR(8)\&.
.RE
.PP
\fIDNSSEC=\fR
.RS 4
A boolean or
"allow\-downgrade"\&. When true, enables
\m[blue]\fBDNSSEC\fR\m[]\&\s-2\u[3]\d\s+2
DNS validation support on the link\&. When set to
"allow\-downgrade", compatibility with non\-DNSSEC capable networks is increased, by automatically turning off DNSEC in this case\&. This option defines a per\-interface setting for
\fBresolved.conf\fR(5)\*(Aqs global
\fIDNSSEC=\fR
option\&. Defaults to false\&. This setting is read by
\fBsystemd-resolved.service\fR(8)\&.
.RE
.PP
\fIDNSSECNegativeTrustAnchors=\fR
.RS 4
A space\-separated list of DNSSEC negative trust anchor domains\&. If specified and DNSSEC is enabled, look\-ups done via the interface\*(Aqs DNS server will be subject to the list of negative trust anchors, and not require authentication for the specified domains, or anything below it\&. Use this to disable DNSSEC authentication for specific private domains, that cannot be proven valid using the Internet DNS hierarchy\&. Defaults to the empty list\&. This setting is read by
\fBsystemd-resolved.service\fR(8)\&.
.RE
.PP
\fILLDP=\fR
.RS 4
Controls support for Ethernet LLDP packet reception\&. LLDP is a link\-layer protocol commonly implemented on professional routers and bridges which announces which physical port a system is connected to, as well as other related data\&. Accepts a boolean or the special value
"routers\-only"\&. When true, incoming LLDP packets are accepted and a database of all LLDP neighbors maintained\&. If
"routers\-only"
is set only LLDP data of various types of routers is collected and LLDP data about other types of devices ignored (such as stations, telephones and others)\&. If false, LLDP reception is disabled\&. Defaults to
"routers\-only"\&. Use
\fBnetworkctl\fR(1)
to query the collected neighbor data\&. LLDP is only available on Ethernet links\&. See
\fIEmitLLDP=\fR
below for enabling LLDP packet emission from the local system\&.
.RE
.PP
\fIEmitLLDP=\fR
.RS 4
Controls support for Ethernet LLDP packet emission\&. Accepts a boolean parameter or the special values
"nearest\-bridge",
"non\-tpmr\-bridge"
and
"customer\-bridge"\&. Defaults to false, which turns off LLDP packet emission\&. If not false, a short LLDP packet with information about the local system is sent out in regular intervals on the link\&. The LLDP packet will contain information about the local host name, the local machine ID (as stored in
\fBmachine-id\fR(5)) and the local interface name, as well as the pretty hostname of the system (as set in
\fBmachine-info\fR(5))\&. LLDP emission is only available on Ethernet links\&. Note that this setting passes data suitable for identification of host to the network and should thus not be enabled on untrusted networks, where such identification data should not be made available\&. Use this option to permit other systems to identify on which interfaces they are connected to this system\&. The three special values control propagation of the LLDP packets\&. The
"nearest\-bridge"
setting permits propagation only to the nearest connected bridge,
"non\-tpmr\-bridge"
permits propagation across Two\-Port MAC Relays, but not any other bridges, and
"customer\-bridge"
permits propagation until a customer bridge is reached\&. For details about these concepts, see
\m[blue]\fBIEEE 802\&.1AB\-2009\fR\m[]\&\s-2\u[4]\d\s+2\&. Note that configuring this setting to true is equivalent to
"nearest\-bridge", the recommended and most restricted level of propagation\&. See
\fILLDP=\fR
above for an option to enable LLDP reception\&.
.RE
.PP
\fIBindCarrier=\fR
.RS 4
A link name or a list of link names\&. When set, controls the behavior of the current link\&. When all links in the list are in an operational down state, the current link is brought down\&. When at least one link has carrier, the current interface is brought up\&.
.RE
.PP
\fIAddress=\fR
.RS 4
A static IPv4 or IPv6 address and its prefix length, separated by a
"/"
character\&. Specify this key more than once to configure several addresses\&. The format of the address must be as described in
\fBinet_pton\fR(3)\&. This is a short\-hand for an [Address] section only containing an Address key (see below)\&. This option may be specified more than once\&.
.sp
If the specified address is 0\&.0\&.0\&.0 (for IPv4) or [::] (for IPv6), a new address range of the requested size is automatically allocated from a system\-wide pool of unused ranges\&. The allocated range is checked against all current network interfaces and all known network configuration files to avoid address range conflicts\&. The default system\-wide pool consists of 192\&.168\&.0\&.0/16, 172\&.16\&.0\&.0/12 and 10\&.0\&.0\&.0/8 for IPv4, and fc00::/7 for IPv6\&. This functionality is useful to manage a large number of dynamically created network interfaces with the same network configuration and automatic address range assignment\&.
.RE
.PP
\fIGateway=\fR
.RS 4
The gateway address, which must be in the format described in
\fBinet_pton\fR(3)\&. This is a short\-hand for a [Route] section only containing a Gateway key\&. This option may be specified more than once\&.
.RE
.PP
\fIDNS=\fR
.RS 4
A DNS server address, which must be in the format described in
\fBinet_pton\fR(3)\&. This option may be specified more than once\&. This setting is read by
\fBsystemd-resolved.service\fR(8)\&.
.RE
.PP
\fIDomains=\fR
.RS 4
A list of domains which should be resolved using the DNS servers on this link\&. Each item in the list should be a domain name, optionally prefixed with a tilde ("~")\&. The domains with the prefix are called "routing\-only domains"\&. The domains without the prefix are called "search domains" and are first used as search suffixes for extending single\-label host names (host names containing no dots) to become fully qualified domain names (FQDNs)\&. If a single\-label host name is resolved on this interface, each of the specified search domains are appended to it in turn, converting it into a fully qualified domain name, until one of them may be successfully resolved\&.
.sp
Both "search" and "routing\-only" domains are used for routing of DNS queries: look\-ups for host names ending in those domains (hence also single label names, if any "search domains" are listed), are routed to the DNS servers configured for this interface\&. The domain routing logic is particularly useful on multi\-homed hosts with DNS servers serving particular private DNS zones on each interface\&.
.sp
The "routing\-only" domain
"~\&."
(the tilde indicating definition of a routing domain, the dot referring to the DNS root domain which is the implied suffix of all valid DNS names) has special effect\&. It causes all DNS traffic which does not match another configured domain routing entry to be routed to DNS servers specified for this interface\&. This setting is useful to prefer a certain set of DNS servers if a link on which they are connected is available\&.
.sp
This setting is read by
\fBsystemd-resolved.service\fR(8)\&. "Search domains" correspond to the
\fIdomain\fR
and
\fIsearch\fR
entries in
\fBresolv.conf\fR(5)\&. Domain name routing has no equivalent in the traditional glibc API, which has no concept of domain name servers limited to a specific link\&.
.RE
.PP
\fINTP=\fR
.RS 4
An NTP server address\&. This option may be specified more than once\&. This setting is read by
\fBsystemd-timesyncd.service\fR(8)\&.
.RE
.PP
\fIIPForward=\fR
.RS 4
Configures IP packet forwarding for the system\&. If enabled, incoming packets on any network interface will be forwarded to any other interfaces according to the routing table\&. Takes either a boolean argument, or the values
"ipv4"
or
"ipv6", which only enable IP packet forwarding for the specified address family\&. This controls the
net\&.ipv4\&.ip_forward
and
net\&.ipv6\&.conf\&.all\&.forwarding
sysctl options of the network interface (see
\m[blue]\fBip\-sysctl\&.txt\fR\m[]\&\s-2\u[5]\d\s+2
for details about sysctl options)\&. Defaults to
"no"\&.
.sp
Note: this setting controls a global kernel option, and does so one way only: if a network that has this setting enabled is set up the global setting is turned on\&. However, it is never turned off again, even after all networks with this setting enabled are shut down again\&.
.sp
To allow IP packet forwarding only between specific network interfaces use a firewall\&.
.RE
.PP
\fIIPMasquerade=\fR
.RS 4
Configures IP masquerading for the network interface\&. If enabled, packets forwarded from the network interface will be appear as coming from the local host\&. Takes a boolean argument\&. Implies
\fIIPForward=ipv4\fR\&. Defaults to
"no"\&.
.RE
.PP
\fIIPv6PrivacyExtensions=\fR
.RS 4
Configures use of stateless temporary addresses that change over time (see
\m[blue]\fBRFC 4941\fR\m[]\&\s-2\u[6]\d\s+2, Privacy Extensions for Stateless Address Autoconfiguration in IPv6)\&. Takes a boolean or the special values
"prefer\-public"
and
"kernel"\&. When true, enables the privacy extensions and prefers temporary addresses over public addresses\&. When
"prefer\-public", enables the privacy extensions, but prefers public addresses over temporary addresses\&. When false, the privacy extensions remain disabled\&. When
"kernel", the kernel\*(Aqs default setting will be left in place\&. Defaults to
"no"\&.
.RE
.PP
\fIIPv6AcceptRA=\fR
.RS 4
Enable or disable IPv6 Router Advertisement (RA) reception support for the interface\&. Takes a boolean parameter\&. If true, RAs are accepted; if false, RAs are ignored, independently of the local forwarding state\&. When not set, the kernel default is used, and RAs are accepted only when local forwarding is disabled for that interface\&. When RAs are accepted, they may trigger the start of the DHCPv6 client if the relevant flags are set in the RA data, or if no routers are found on the link\&.
.sp
Further settings for the IPv6 RA support may be configured in the
"[IPv6AcceptRA]"
section, see below\&.
.sp
Also see
\m[blue]\fBip\-sysctl\&.txt\fR\m[]\&\s-2\u[5]\d\s+2
in the kernel documentation regarding
"accept_ra", but note that systemd\*(Aqs setting of
\fB1\fR
(i\&.e\&. true) corresponds to kernel\*(Aqs setting of
\fB2\fR\&.
.RE
.PP
\fIIPv6DuplicateAddressDetection=\fR
.RS 4
Configures the amount of IPv6 Duplicate Address Detection (DAD) probes to send\&. Defaults to unset\&.
.RE
.PP
\fIIPv6HopLimit=\fR
.RS 4
Configures IPv6 Hop Limit\&. For each router that forwards the packet, the hop limit is decremented by 1\&. When the hop limit field reaches zero, the packet is discarded\&. Defaults to unset\&.
.RE
.PP
\fIIPv4ProxyARP=\fR
.RS 4
A boolean\&. Configures proxy ARP for IPv4\&. Proxy ARP is the technique in which one host, usually a router, answers ARP requests intended for another machine\&. By "faking" its identity, the router accepts responsibility for routing packets to the "real" destination\&. (see
\m[blue]\fBRFC 1027\fR\m[]\&\s-2\u[7]\d\s+2\&. Defaults to unset\&.
.RE
.PP
\fIIPv6ProxyNDPAddress=\fR
.RS 4
An IPv6 address, for which Neighbour Advertisement messages will be proxied\&. Proxy NDP (Neighbor Discovery Protocol) is a technique for IPv6 to allow routing of addresses to a different destination when peers expect them to be present on a certain physical link\&. In this case a router answers Neighbour Advertisement messages intended for another machine by offering its own MAC address as destination\&. Unlike proxy ARP for IPv4, is not enabled globally, but will only send Neighbour Advertisement messages for addresses in the IPv6 neighbor proxy table, which can also be shown by
\fBip \-6 neighbour show proxy\fR
This option may be specified more than once\&. systemd\-networkd will control the per\-interface `proxy_ndp` switch for each configured interface, depending on whether there are
\fBIPv6ProxyNDPAddress=\fR
entries configured and add these to the kernels IPv6 neighbor proxy table\&. Defaults to unset\&.
.RE
.PP
\fIBridge=\fR
.RS 4
The name of the bridge to add the link to\&. See
\fBsystemd.netdev\fR(5)\&.
.RE
.PP
\fIBond=\fR
.RS 4
The name of the bond to add the link to\&. See
\fBsystemd.netdev\fR(5)\&.
.RE
.PP
\fIVRF=\fR
.RS 4
The name of the VRF to add the link to\&. See
\fBsystemd.netdev\fR(5)\&.
.RE
.PP
\fIVLAN=\fR
.RS 4
The name of a VLAN to create on the link\&. See
\fBsystemd.netdev\fR(5)\&. This option may be specified more than once\&.
.RE
.PP
\fIMACVLAN=\fR
.RS 4
The name of a MACVLAN to create on the link\&. See
\fBsystemd.netdev\fR(5)\&. This option may be specified more than once\&.
.RE
.PP
\fIVXLAN=\fR
.RS 4
The name of a VXLAN to create on the link\&. See
\fBsystemd.netdev\fR(5)\&. This option may be specified more than once\&.
.RE
.PP
\fITunnel=\fR
.RS 4
The name of a Tunnel to create on the link\&. See
\fBsystemd.netdev\fR(5)\&. This option may be specified more than once\&.
.RE
.SH "[ADDRESS] SECTION OPTIONS"
.PP
An
"[Address]"
section accepts the following keys\&. Specify several
"[Address]"
sections to configure several addresses\&.
.PP
\fIAddress=\fR
.RS 4
As in the
"[Network]"
section\&. This key is mandatory\&.
.RE
.PP
\fIPeer=\fR
.RS 4
The peer address in a point\-to\-point connection\&. Accepts the same format as the
"Address"
key\&.
.RE
.PP
\fIBroadcast=\fR
.RS 4
The broadcast address, which must be in the format described in
\fBinet_pton\fR(3)\&. This key only applies to IPv4 addresses\&. If it is not given, it is derived from the
"Address"
key\&.
.RE
.PP
\fILabel=\fR
.RS 4
An address label\&.
.RE
.PP
\fIPreferredLifetime=\fR
.RS 4
Allows the default "preferred lifetime" of the address to be overridden\&. Only three settings are accepted:
"forever"
or
"infinity"
which is the default and means that the address never expires, and
"0"
which means that the address is considered immediately "expired" and will not be used, unless explicitly requested\&. A setting of PreferredLifetime=0 is useful for addresses which are added to be used only by a specific application, which is then configured to use them explicitly\&.
.RE
.PP
\fIHomeAddress=\fR
.RS 4
Takes a boolean argument\&. Designates this address the "home address" as defined in
\m[blue]\fBRFC 6275\fR\m[]\&\s-2\u[8]\d\s+2\&. Supported only on IPv6\&. Defaults to false\&.
.RE
.PP
\fIDuplicateAddressDetection=\fR
.RS 4
Takes a boolean argument\&. Do not perform Duplicate Address Detection
\m[blue]\fBRFC 4862\fR\m[]\&\s-2\u[9]\d\s+2
when adding this address\&. Supported only on IPv6\&. Defaults to false\&.
.RE
.PP
\fIManageTemporaryAddress=\fR
.RS 4
Takes a boolean argument\&. If true the kernel manage temporary addresses created from this one as template on behalf of Privacy Extensions
\m[blue]\fBRFC 3041\fR\m[]\&\s-2\u[10]\d\s+2\&. For this to become active, the use_tempaddr sysctl setting has to be set to a value greater than zero\&. The given address needs to have a prefix length of 64\&. This flag allows to use privacy extensions in a manually configured network, just like if stateless auto\-configuration was active\&. Defaults to false\&.
.RE
.PP
\fIPrefixRoute=\fR
.RS 4
Takes a boolean argument\&. When adding or modifying an IPv6 address, the userspace application needs a way to suppress adding a prefix route\&. This is for example relevant together with IFA_F_MANAGERTEMPADDR, where userspace creates autoconf generated addresses, but depending on on\-link, no route for the prefix should be added\&. Defaults to false\&.
.RE
.PP
\fIAutoJoin=\fR
.RS 4
Takes a boolean argument\&. Joining multicast group on ethernet level via
\fBip maddr\fR
command would not work if we have an Ethernet switch that does IGMP snooping since the switch would not replicate multicast packets on ports that did not have IGMP reports for the multicast addresses\&. Linux vxlan interfaces created via
\fBip link add vxlan\fR
or networkd\*(Aqs netdev kind vxlan have the group option that enables then to do the required join\&. By extending ip address command with option
"autojoin"
we can get similar functionality for openvswitch (OVS) vxlan interfaces as well as other tunneling mechanisms that need to receive multicast traffic\&. Defaults to
"no"\&.
.RE
.SH "[ROUTE] SECTION OPTIONS"
.PP
The
"[Route]"
section accepts the following keys\&. Specify several
"[Route]"
sections to configure several routes\&.
.PP
\fIGateway=\fR
.RS 4
As in the
"[Network]"
section\&.
.RE
.PP
\fIDestination=\fR
.RS 4
The destination prefix of the route\&. Possibly followed by a slash and the prefix length\&. If omitted, a full\-length host route is assumed\&.
.RE
.PP
\fISource=\fR
.RS 4
The source prefix of the route\&. Possibly followed by a slash and the prefix length\&. If omitted, a full\-length host route is assumed\&.
.RE
.PP
\fIMetric=\fR
.RS 4
The metric of the route (an unsigned integer)\&.
.RE
.PP
\fIScope=\fR
.RS 4
The scope of the route, which can be
"global",
"link"
or
"host"\&. Defaults to
"global"\&.
.RE
.PP
\fIPreferredSource=\fR
.RS 4
The preferred source address of the route\&. The address must be in the format described in
\fBinet_pton\fR(3)\&.
.RE
.PP
\fITable=\fR\fI\fInum\fR\fR
.RS 4
The table identifier for the route (a number between 1 and 4294967295, or 0 to unset)\&. The table can be retrieved using
\fBip route show table \fR\fB\fInum\fR\fR\&.
.RE
.SH "[DHCP] SECTION OPTIONS"
.PP
The
"[DHCP]"
section configures the DHCPv4 and DHCP6 client, if it is enabled with the
\fIDHCP=\fR
setting described above:
.PP
\fIUseDNS=\fR
.RS 4
When true (the default), the DNS servers received from the DHCP server will be used and take precedence over any statically configured ones\&.
.sp
This corresponds to the
\fBnameserver\fR
option in
\fBresolv.conf\fR(5)\&.
.RE
.PP
\fIUseNTP=\fR
.RS 4
When true (the default), the NTP servers received from the DHCP server will be used by systemd\-timesyncd and take precedence over any statically configured ones\&.
.RE
.PP
\fIUseMTU=\fR
.RS 4
When true, the interface maximum transmission unit from the DHCP server will be used on the current link\&. Defaults to false\&.
.RE
.PP
\fISendHostname=\fR
.RS 4
When true (the default), the machine\*(Aqs hostname will be sent to the DHCP server\&.
.RE
.PP
\fIUseHostname=\fR
.RS 4
When true (the default), the hostname received from the DHCP server will be set as the transient hostname of the system
.RE
.PP
\fIHostname=\fR
.RS 4
Use this value for the hostname which is sent to the DHCP server, instead of machine\*(Aqs hostname\&.
.RE
.PP
\fIUseDomains=\fR
.RS 4
Takes a boolean argument, or the special value
"route"\&. When true, the domain name received from the DHCP server will be used as DNS search domain over this link, similar to the effect of the
\fBDomains=\fR
setting\&. If set to
"route", the domain name received from the DHCP server will be used for routing DNS queries only, but not for searching, similar to the effect of the
\fBDomains=\fR
setting when the argument is prefixed with
"~"\&. Defaults to false\&.
.sp
It is recommended to enable this option only on trusted networks, as setting this affects resolution of all host names, in particular of single\-label names\&. It is generally safer to use the supplied domain only as routing domain, rather than as search domain, in order to not have it affect local resolution of single\-label names\&.
.sp
When set to true, this setting corresponds to the
\fBdomain\fR
option in
\fBresolv.conf\fR(5)\&.
.RE
.PP
\fIUseRoutes=\fR
.RS 4
When true (the default), the static routes will be requested from the DHCP server and added to the routing table with a metric of 1024\&.
.RE
.PP
\fIUseTimezone=\fR
.RS 4
When true, the timezone received from the DHCP server will be set as timezone of the local system\&. Defaults to
"no"\&.
.RE
.PP
\fICriticalConnection=\fR
.RS 4
When true, the connection will never be torn down even if the DHCP lease expires\&. This is contrary to the DHCP specification, but may be the best choice if, say, the root filesystem relies on this connection\&. Defaults to false\&.
.RE
.PP
\fIClientIdentifier=\fR
.RS 4
The DHCPv4 client identifier to use\&. Either
"mac"
to use the MAC address of the link or
"duid"
(the default, see below) to use an RFC4361\-compliant Client ID\&.
.RE
.PP
\fIVendorClassIdentifier=\fR
.RS 4
The vendor class identifier used to identify vendor type and configuration\&.
.RE
.PP
\fIDUIDType=\fR
.RS 4
Override the global
\fIDUIDType\fR
setting for this network\&. See
\fBnetworkd.conf\fR(5)
for a description of possible values\&.
.RE
.PP
\fIDUIDRawData=\fR
.RS 4
Override the global
\fIDUIDRawData\fR
setting for this network\&. See
\fBnetworkd.conf\fR(5)
for a description of possible values\&.
.RE
.PP
\fIIAID=\fR
.RS 4
The DHCP Identity Association Identifier (IAID) for the interface, a 32\-bit unsigned integer\&.
.RE
.PP
\fIRequestBroadcast=\fR
.RS 4
Request the server to use broadcast messages before the IP address has been configured\&. This is necessary for devices that cannot receive RAW packets, or that cannot receive packets at all before an IP address has been configured\&. On the other hand, this must not be enabled on networks where broadcasts are filtered out\&.
.RE
.PP
\fIRouteMetric=\fR
.RS 4
Set the routing metric for routes specified by the DHCP server\&.
.RE
.PP
\fIRouteTable=\fR\fI\fInum\fR\fR
.RS 4
The table identifier for DHCP routes (a number between 1 and 4294967295, or 0 to unset)\&. The table can be retrieved using
\fBip route show table \fR\fB\fInum\fR\fR\&.
.RE
.PP
\fIListenPort=\fR
.RS 4
Allow setting custom port for the DHCP client to listen on\&.
.RE
.SH "[IPV6ACCEPTRA] SECTION OPTIONS"
.PP
The
"[IPv6AcceptRA]"
section configures the IPv6 Router Advertisement (RA) client, if it is enabled with the
\fIIPv6AcceptRA=\fR
setting described above:
.PP
\fIUseDNS=\fR
.RS 4
When true (the default), the DNS servers received in the Router Advertisement will be used and take precedence over any statically configured ones\&.
.sp
This corresponds to the
\fBnameserver\fR
option in
\fBresolv.conf\fR(5)\&.
.RE
.PP
\fIUseDomains=\fR
.RS 4
Takes a boolean argument, or the special value
"route"\&. When true, the domain name received via IPv6 Router Advertisement (RA) will be used as DNS search domain over this link, similar to the effect of the
\fBDomains=\fR
setting\&. If set to
"route", the domain name received via IPv6 RA will be used for routing DNS queries only, but not for searching, similar to the effect of the
\fBDomains=\fR
setting when the argument is prefixed with
"~"\&. Defaults to false\&.
.sp
It is recommended to enable this option only on trusted networks, as setting this affects resolution of all host names, in particular of single\-label names\&. It is generally safer to use the supplied domain only as routing domain, rather than as search domain, in order to not have it affect local resolution of single\-label names\&.
.sp
When set to true, this setting corresponds to the
\fBdomain\fR
option in
\fBresolv.conf\fR(5)\&.
.RE
.PP
\fIRouteTable=\fR\fI\fInum\fR\fR
.RS 4
The table identifier for the routes received in the Router Advertisement (a number between 1 and 4294967295, or 0 to unset)\&. The table can be retrieved using
\fBip route show table \fR\fB\fInum\fR\fR\&.
.RE
.SH "[DHCPSERVER] SECTION OPTIONS"
.PP
The
"[DHCPServer]"
section contains settings for the DHCP server, if enabled via the
\fIDHCPServer=\fR
option described above:
.PP
\fIPoolOffset=\fR, \fIPoolSize=\fR
.RS 4
Configures the pool of addresses to hand out\&. The pool is a contiguous sequence of IP addresses in the subnet configured for the server address, which does not include the subnet nor the broadcast address\&.
\fIPoolOffset=\fR
takes the offset of the pool from the start of subnet, or zero to use the default value\&.
\fIPoolSize=\fR
takes the number of IP addresses in the pool or zero to use the default value\&. By default, the pool starts at the first address after the subnet address and takes up the rest of the subnet, excluding the broadcast address\&. If the pool includes the server address (the default), this is reserved and not handed out to clients\&.
.RE
.PP
\fIDefaultLeaseTimeSec=\fR, \fIMaxLeaseTimeSec=\fR
.RS 4
Control the default and maximum DHCP lease time to pass to clients\&. These settings take time values in seconds or another common time unit, depending on the suffix\&. The default lease time is used for clients that did not ask for a specific lease time\&. If a client asks for a lease time longer than the maximum lease time, it is automatically shortened to the specified time\&. The default lease time defaults to 1h, the maximum lease time to 12h\&. Shorter lease times are beneficial if the configuration data in DHCP leases changes frequently and clients shall learn the new settings with shorter latencies\&. Longer lease times reduce the generated DHCP network traffic\&.
.RE
.PP
\fIEmitDNS=\fR, \fIDNS=\fR
.RS 4
Configures whether the DHCP leases handed out to clients shall contain DNS server information\&. The
\fIEmitDNS=\fR
setting takes a boolean argument and defaults to
"yes"\&. The DNS servers to pass to clients may be configured with the
\fIDNS=\fR
option, which takes a list of IPv4 addresses\&. If the
\fIEmitDNS=\fR
option is enabled but no servers configured, the servers are automatically propagated from an "uplink" interface that has appropriate servers set\&. The "uplink" interface is determined by the default route of the system with the highest priority\&. Note that this information is acquired at the time the lease is handed out, and does not take uplink interfaces into account that acquire DNS or NTP server information at a later point\&. DNS server propagation does not take
/etc/resolv\&.conf
into account\&. Also, note that the leases are not refreshed if the uplink network configuration changes\&. To ensure clients regularly acquire the most current uplink DNS server information, it is thus advisable to shorten the DHCP lease time via
\fIMaxLeaseTimeSec=\fR
described above\&.
.RE
.PP
\fIEmitNTP=\fR, \fINTP=\fR
.RS 4
Similar to the
\fIEmitDNS=\fR
and
\fIDNS=\fR
settings described above, these settings configure whether and what NTP server information shall be emitted as part of the DHCP lease\&. The same syntax, propagation semantics and defaults apply as for
\fIEmitDNS=\fR
and
\fIDNS=\fR\&.
.RE
.PP
\fIEmitRouter=\fR
.RS 4
Similar to the
\fIEmitDNS=\fR
setting described above, this setting configures whether the DHCP lease should contain the router option\&. The same syntax, propagation semantics and defaults apply as for
\fIEmitDNS=\fR\&.
.RE
.PP
\fIEmitTimezone=\fR, \fITimezone=\fR
.RS 4
Configures whether the DHCP leases handed out to clients shall contain timezone information\&. The
\fIEmitTimezone=\fR
setting takes a boolean argument and defaults to
"yes"\&. The
\fITimezone=\fR
setting takes a timezone string (such as
"Europe/Berlin"
or
"UTC") to pass to clients\&. If no explicit timezone is set, the system timezone of the local host is propagated, as determined by the
/etc/localtime
symlink\&.
.RE
.SH "[BRIDGE] SECTION OPTIONS"
.PP
The
"[Bridge]"
section accepts the following keys\&.
.PP
\fIUnicastFlood=\fR
.RS 4
A boolean\&. Controls whether the bridge should flood traffic for which an FDB entry is missing and the destination is unknown through this port\&. Defaults to on\&.
.RE
.PP
\fIHairPin=\fR
.RS 4
A boolean\&. Configures whether traffic may be sent back out of the port on which it was received\&. By default, this flag is false, and the bridge will not forward traffic back out of the receiving port\&.
.RE
.PP
\fIUseBPDU=\fR
.RS 4
A boolean\&. Configures whether STP Bridge Protocol Data Units will be processed by the bridge port\&. Defaults to yes\&.
.RE
.PP
\fIFastLeave=\fR
.RS 4
A boolean\&. This flag allows the bridge to immediately stop multicast traffic on a port that receives an IGMP Leave message\&. It is only used with IGMP snooping if enabled on the bridge\&. Defaults to off\&.
.RE
.PP
\fIAllowPortToBeRoot=\fR
.RS 4
A boolean\&. Configures whether a given port is allowed to become a root port\&. Only used when STP is enabled on the bridge\&. Defaults to on\&.
.RE
.PP
\fICost=\fR
.RS 4
Sets the "cost" of sending packets of this interface\&. Each port in a bridge may have a different speed and the cost is used to decide which link to use\&. Faster interfaces should have lower costs\&.
.RE
.SH "[BRIDGEFDB] SECTION OPTIONS"
.PP
The
"[BridgeFDB]"
section manages the forwarding database table of a port and accepts the following keys\&. Specify several
"[BridgeFDB]"
sections to configure several static MAC table entries\&.
.PP
\fIMACAddress=\fR
.RS 4
As in the
"[Network]"
section\&. This key is mandatory\&.
.RE
.PP
\fIVLANId=\fR
.RS 4
The VLAN ID for the new static MAC table entry\&. If omitted, no VLAN ID info is appended to the new static MAC table entry\&.
.RE
.SH "[BRIDGEVLAN] SECTION OPTIONS"
.PP
The
"[BridgeVLAN]"
section manages the VLAN ID configuration of a bridge port and accepts the following keys\&. Specify several
"[BridgeVLAN]"
sections to configure several VLAN entries\&. The
\fIVLANFiltering=\fR
option has to be enabled, see
"[Bridge]"
section in
\fBsystemd.netdev\fR(5)\&.
.PP
\fIVLAN=\fR
.RS 4
The VLAN ID allowed on the port\&. This can be either a single ID or a range M\-N\&. VLAN IDs are valid from 1 to 4094\&.
.RE
.PP
\fIEgressUntagged=\fR
.RS 4
The VLAN ID specified here will be used to untag frames on egress\&. Configuring
\fIEgressUntagged=\fR
implicates the use of
\fIVLAN=\fR
above and will enable the VLAN ID for ingress as well\&. This can be either a single ID or a range M\-N\&.
.RE
.PP
\fIPVID=\fR
.RS 4
The Port VLAN ID specified here is assigned to all untagged frames at ingress\&.
\fIPVID=\fR
can be used only once\&. Configuring
\fIPVID=\fR
implicates the use of
\fIVLAN=\fR
above and will enable the VLAN ID for ingress as well\&.
.RE
.SH "EXAMPLES"
.PP
\fBExample\ \&1.\ \&Static network configuration\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/50\-static\&.network
[Match]
Name=enp2s0

[Network]
Address=192\&.168\&.0\&.15/24
Gateway=192\&.168\&.0\&.1
.fi
.if n \{\
.RE
.\}
.PP
This brings interface
"enp2s0"
up with a static address\&. The specified gateway will be used for a default route\&.
.PP
\fBExample\ \&2.\ \&DHCP on ethernet links\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/80\-dhcp\&.network
[Match]
Name=en*

[Network]
DHCP=yes
.fi
.if n \{\
.RE
.\}
.PP
This will enable DHCPv4 and DHCPv6 on all interfaces with names starting with
"en"
(i\&.e\&. ethernet interfaces)\&.
.PP
\fBExample\ \&3.\ \&A bridge with two enslaved links\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/25\-bridge\-static\&.network
[Match]
Name=bridge0

[Network]
Address=192\&.168\&.0\&.15/24
Gateway=192\&.168\&.0\&.1
DNS=192\&.168\&.0\&.1
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/25\-bridge\-slave\-interface\-1\&.network
[Match]
Name=enp2s0

[Network]
Bridge=bridge0
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/25\-bridge\-slave\-interface\-2\&.network
[Match]
Name=wlp3s0

[Network]
Bridge=bridge0
.fi
.if n \{\
.RE
.\}
.PP
This creates a bridge and attaches devices
"enp2s0"
and
"wlp3s0"
to it\&. The bridge will have the specified static address and network assigned, and a default route via the specified gateway will be added\&. The specified DNS server will be added to the global list of DNS resolvers\&.
.PP
\fBExample\ \&4.\ \&\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/20\-bridge\-slave\-interface\-vlan\&.network
[Match]
Name=enp2s0

[Network]
Bridge=bridge0

[BridgeVLAN]
VLAN=1\-32
PVID=42
EgressUntagged=42

[BridgeVLAN]
VLAN=100\-200

[BridgeVLAN]
EgressUntagged=300\-400
.fi
.if n \{\
.RE
.\}
.PP
This overrides the configuration specified in the previous example for the interface
"enp2s0", and enables VLAN on that bridge port\&. VLAN IDs 1\-32, 42, 100\-400 will be allowed\&. Packets tagged with VLAN IDs 42, 300\-400 will be untagged when they leave on this interface\&. Untagged packets which arrive on this interface will be assigned VLAN ID 42\&.
.PP
\fBExample\ \&5.\ \&Various tunnels\fR
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/systemd/network/25\-tunnels\&.network
[Match]
Name=ens1

[Network]
Tunnel=ipip\-tun
Tunnel=sit\-tun
Tunnel=gre\-tun
Tunnel=vti\-tun
      
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/systemd/network/25\-tunnel\-ipip\&.netdev
[NetDev]
Name=ipip\-tun
Kind=ipip
      
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/systemd/network/25\-tunnel\-sit\&.netdev
[NetDev]
Name=sit\-tun
Kind=sit
      
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/systemd/network/25\-tunnel\-gre\&.netdev
[NetDev]
Name=gre\-tun
Kind=gre
      
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/systemd/network/25\-tunnel\-vti\&.netdev
[NetDev]
Name=vti\-tun
Kind=vti
      
.fi
.if n \{\
.RE
.\}
.PP
This will bring interface
"ens1"
up and create an IPIP tunnel, a SIT tunnel, a GRE tunnel, and a VTI tunnel using it\&.
.PP
\fBExample\ \&6.\ \&A bond device\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/30\-bond1\&.network
[Match]
Name=bond1

[Network]
DHCP=ipv6
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/30\-bond1\&.netdev
[NetDev]
Name=bond1
Kind=bond
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/30\-bond1\-dev1\&.network
[Match]
MACAddress=52:54:00:e9:64:41

[Network]
Bond=bond1
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/30\-bond1\-dev2\&.network
[Match]
MACAddress=52:54:00:e9:64:42

[Network]
Bond=bond1
.fi
.if n \{\
.RE
.\}
.PP
This will create a bond device
"bond1"
and enslave the two devices with MAC addresses 52:54:00:e9:64:41 and 52:54:00:e9:64:42 to it\&. IPv6 DHCP will be used to acquire an address\&.
.PP
\fBExample\ \&7.\ \&Virtual Routing and Forwarding (VRF)\fR
.PP
Add the
"bond1"
interface to the VRF master interface
"vrf1"\&. This will redirect routes generated on this interface to be within the routing table defined during VRF creation\&. Traffic won\*(Aqt be redirected towards the VRFs routing table unless specific ip\-rules are added\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# /etc/systemd/network/25\-vrf\&.network
[Match]
Name=bond1

[Network]
VRF=vrf1
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&8.\ \&MacVTap\fR
.PP
This brings up a network interface
"macvtap\-test"
and attaches it to
"enp0s25"\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# /lib/systemd/network/25\-macvtap\&.network
[Match]
Name=enp0s25

[Network]
MACVTAP=macvtap\-test
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-networkd.service\fR(8),
\fBsystemd.link\fR(5),
\fBsystemd.netdev\fR(5),
\fBsystemd-resolved.service\fR(8)
.SH "NOTES"
.IP " 1." 4
Link-Local Multicast Name Resolution
.RS 4
\%https://tools.ietf.org/html/rfc4795
.RE
.IP " 2." 4
Multicast DNS
.RS 4
\%https://tools.ietf.org/html/rfc6762
.RE
.IP " 3." 4
DNSSEC
.RS 4
\%https://tools.ietf.org/html/rfc4033
.RE
.IP " 4." 4
IEEE 802.1AB-2009
.RS 4
\%http://standards.ieee.org/getieee802/download/802.1AB-2009.pdf
.RE
.IP " 5." 4
ip-sysctl.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
.RE
.IP " 6." 4
RFC 4941
.RS 4
\%https://tools.ietf.org/html/rfc4941
.RE
.IP " 7." 4
RFC 1027
.RS 4
\%https://tools.ietf.org/html/rfc1027
.RE
.IP " 8." 4
RFC 6275
.RS 4
\%https://tools.ietf.org/html/rfc6275
.RE
.IP " 9." 4
RFC 4862
.RS 4
\%https://tools.ietf.org/html/rfc4862
.RE
.IP "10." 4
RFC 3041
.RS 4
\%https://tools.ietf.org/html/rfc3041
.RE
